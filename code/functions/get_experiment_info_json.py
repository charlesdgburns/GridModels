""" Creates .json file with experiment info """
# This is hard-coded for mEC cohort 1 recording sessions.

# %% Imports
import json
#from ..analysis.processing.get_time_aligned_rates import get_av_intra_trial_times

# %% Global variables
SUBJECT_IDS = ["mEC_2", "mEC_5", "mEC_6", "mEC_7", "mEC_8"]

# The following may not be used (and outdated for Peter's calibration back in 2022)
REWARD_SIZE2DUR = {"50uL": 210, "30uL": 132, "17uL": 82, "15uL": 74, "10uL": 55, "9uL": 51, "8uL": 47}

#FULLY CONNECTED
FC_STRUCTURE = [ 
    "A1-A2",
    "A2-A3",
    "A3-A4",
    "A4-A5",
    "A5-A6",
    "A6-A7",
    "A1-B1",
    "A2-B2",
    "A3-B3",
    "A4-B4",
    "A5-B5",
    "A6-B6",
    "A7-B7",
    "B1-B2",
    "B2-B3",
    "B3-B4",
    "B4-B5",
    "B5-B6",
    "B6-B7",
    "B1-C1",
    "B2-C2",
    "B3-C3",
    "B4-C4",
    "B5-C5",
    "B6-C6",
    "B7-C7",
    "C1-C2",
    "C2-C3",
    "C3-C4",
    "C4-C5",
    "C5-C6",
    "C6-C7",
    "C1-D1",
    "C2-D2",
    "C3-D3",
    "C4-D4",
    "C5-D5",
    "C6-D6",
    "C7-D7",
    "D1-D2",
    "D2-D3",
    "D3-D4",
    "D4-D5",
    "D5-D6",
    "D6-D7",
    "D1-E1",
    "D2-E2",
    "D3-E3",
    "D4-E4",
    "D5-E5",
    "D6-E6",
    "D7-E7",
    "E1-E2",
    "E2-E3",
    "E3-E4",
    "E4-E5",
    "E5-E6",
    "E6-E7",
    "E1-F1",
    "E2-F2",
    "E3-F3",
    "E4-F4",
    "E5-F5",
    "E6-F6",
    "E7-F7",
    "F1-F2",
    "F2-F3",
    "F3-F4",
    "F4-F5",
    "F5-F6",
    "F6-F7",
    "F1-G1",
    "F2-G2",
    "F3-G3",
    "F4-G4",
    "F5-G5",
    "F6-G6",
    "F7-G7",
    "G1-G2",
    "G2-G3",
    "G3-G4",
    "G4-G5",
    "G5-G6",
    "G6-G7",
]

#Peter's Maze 1
M1_STRUCTURE = [
    "A1-A2",
    "A3-A4",
    "A4-A5",
    "A5-A6",
    "A6-A7",
    "A2-B2",
    "A3-B3",
    "A5-B5",
    "A7-B7",
    "B4-B5",
    "B6-B7",
    "B1-C1",
    "B2-C2",
    "B3-C3",
    "B6-C6",
    "C1-C2",
    "C2-C3",
    "C3-C4",
    "C4-C5",
    "C5-C6",
    "C6-C7",
    "C2-D2",
    "C5-D5",
    "C7-D7",
    "D1-D2",
    "D3-D4",
    "D4-D5",
    "D6-D7",
    "D1-E1",
    "D2-E2",
    "D3-E3",
    "D4-E4",
    "D5-E5",
    "D6-E6",
    "E2-F2",
    "E3-F3",
    "E5-F5",
    "E6-F6",
    "E7-F7",
    "F1-F2",
    "F2-F3",
    "F4-F5",
    "F6-F7",
    "F2-G2",
    "F5-G5",
    "F6-G6",
    "G1-G2",
    "G2-G3",
    "G3-G4",
    "G4-G5",
    "G5-G6",
    "G6-G7",
]

#Peter's Maze 2
M2_STRUCTURE = [
    "A1-A2",
    "A2-A3",
    "A3-A4",
    "A4-A5",
    "A5-A6",
    "A6-A7",
    "A1-B1",
    "A3-B3",
    "A5-B5",
    "A6-B6",
    "B1-B2",
    "B6-B7",
    "B1-C1",
    "B2-C2",
    "B4-C4",
    "B5-C5",
    "B7-C7",
    "C2-C3",
    "C3-C4",
    "C4-C5",
    "C5-C6",
    "C6-C7",
    "C1-D1",
    "C2-D2",
    "C5-D5",
    "D3-D4",
    "D4-D5",
    "D5-D6",
    "D6-D7",
    "D1-E1",
    "D3-E3",
    "D6-E6",
    "E1-E2",
    "E2-E3",
    "E4-E5",
    "E6-E7",
    "E3-F3",
    "E5-F5",
    "E7-F7",
    "F1-F2",
    "F2-F3",
    "F3-F4",
    "F4-F5",
    "F5-F6",
    "F6-F7",
    "F3-G3",
    "F5-G5",
    "F7-G7",
    "G1-G2",
    "G2-G3",
    "G4-G5",
    "G5-G6",
]

#Hairpin Maze
HP_STRUCTURE = [ 
    "A1-A2",
    "A2-A3",
    "A3-A4",
    "A4-A5",
    "A5-A6",
    "A6-A7",
    "A7-B7",
    "B1-B2",
    "B2-B3",
    "B3-B4",
    "B4-B5",
    "B5-B6",
    "B6-B7",
    "B1-C1",
    "C1-C2",
    "C2-C3",
    "C3-C4",
    "C4-C5",
    "C5-C6",
    "C6-C7",
    "C7-D7",
    "D1-D2",
    "D2-D3",
    "D3-D4",
    "D4-D5",
    "D5-D6",
    "D6-D7",
    "D1-E1",
    "E1-E2",
    "E2-E3",
    "E3-E4",
    "E4-E5",
    "E5-E6",
    "E6-E7",
    "E7-F7",
    "F1-F2",
    "F2-F3",
    "F3-F4",
    "F4-F5",
    "F5-F6",
    "F6-F7",
    "F1-G1",
    "G1-G2",
    "G2-G3",
    "G3-G4",
    "G4-G5",
    "G5-G6",
    "G6-G7",
]

RM_STRUCTURE = [ "A1-A2",
                "A2-A3",
                "A3-A4",
                "A4-A5",
                "A5-A6",
                "A6-A7",
                "A1-B1",
                "A2-B2",
                "A3-B3",
                "A4-B4",
                "A5-B5",
                "A6-B6",
                "A7-B7",
                "B1-B2",
                "B2-B3",
                "B3-B4",
                "B5-B6",
                "B6-B7",
                "B1-C1",
                "B2-C2",
                "B3-C3",
                "B4-C4",
                "B5-C5",
                "B6-C6",
                "B7-C7",
                "C1-C2",
                "C2-C3",
                "C3-C4",
                "C5-C6",
                "C6-C7",
                "C2-D2",
                "C3-D3",
                "C4-D4",
                "C5-D5",
                "C6-D6",
                "C7-D7",
                "D1-D2",
                "D3-D4",
                "D5-D6",
                "D6-D7",
                "D1-E1",
                "D2-E2",
                "D5-E5",
                "E1-E2",
                "E2-E3",
                "E4-E5",
                "E5-E6",
                "E6-E7",
                "E1-F1",
                "E2-F2",
                "E3-F3",
                "E4-F4",
                "E5-F5",
                "E6-F6",
                "E7-F7",
                "F1-F2",
                "F2-F3",
                "F4-F5",
                "F5-F6",
                "F6-F7",
                "F1-G1",
                "F2-G2",
                "F3-G3",
                "F4-G4",
                "F5-G5",
                "F6-G6",
                "F7-G7",
                "G1-G2",
                "G2-G3",
                "G3-G4",
                "G4-G5",
                "G5-G6",
                "G6-G7"]

#Goal locations may be changed
GOALS = {
    "all": [
        "A2",
        "A3",
        "A6",
        "B4",
        "B5",
        "B6",
        "C1",
        "C3",
        "C5",
        "C7",
        "D2",
        "D3",
        "D6",
        "E1",
        "E3",
        "E4",
        "E5",
        "E6",
        "F2",
        "F4",
        "F7",
        "G1",
        "G4",
        "G7",
    ],
    "subset_1": ["A2", "A6", "B4", "C1", "C3", "C7", "D3", "E3", "E5", "F2", "F7", "G4"],
    "subset_2": ["A3", "B5", "B6", "C5", "D2", "D6", "E1", "E4", "E6", "F4", "G1", "G7"],
}

MAZE_DAY2GOALS = {
    "maze_FC": {
        1: "all",
        2: "all",
        3: "all",
        4: "all",
        5: "all",
        6: "all",
        7: "subset_1",
        8: "subset_2",
    },
    "maze_1": {
        1: "all",
        2: "all",
        3: "all",
        4: "all",
        5: "all",
        6: "all",
        7: "subset_1",
        8: "subset_2",
        9: "all",
        10: "subset_2",
        11: "subset_1",
    },
    "maze_2": {
        1: "all",
        2: "all",
        3: "all",
        4: "all",
        5: "all",
        6: "all",
        7: "subset_2",
        8: "subset_1",
        9: "all",
        10: "all",
        11: "subset_1",
        12: "subset_2",
    },
}

MAZE_CONFIG2INFO = {
    "fully_connected": {
        "start": "06/23/2022, 00:00:00",
        "end": "07/05/2022, 23:59:59",
        "structure": FC_STRUCTURE,
        "goals": GOALS,
    },
    "maze_1": {
        "start": "07/07/2022, 00:00:00",
        "end": "07/17/2022, 23:59:59",
        "structure": M1_STRUCTURE,
        "goals": GOALS,
    },
    "maze_2": {
        "start": "07/19/2022, 00:00:00",
        "end": "07/29/2022, 23:59:59",
        "structure": M2_STRUCTURE,
        "goals": GOALS,
    },
    "hairpin": {
        "start": "01/01/2024, 00:00:00",
        "end": "14/01/2024, 23:59:59",
        "structure": HP_STRUCTURE,
        "goals": GOALS,
    },
    "rooms_maze": {
        "start": "01/01/2024, 00:00:00",
        "end": "14/01/2024, 23:59:59",
        "structure": RM_STRUCTURE,
        "goals": GOALS,
    },
}


# intra-trial interval times ???
#intra_trial_interval_times = list(get_av_intra_trial_times())


# add physical detials of the maze apparatus
MAZE_MEASUREMENTS = {
    "maze_node_dimensions": (7, 7),
    "lower_left_node_cartesian_center": (0.15, 0.15),  # meters
    "distance_between_node_centers": 0.18,  # meters
    "tower_width": 0.11, # meters
}  

# miscellaneous info (eg, goals split by room on the 3rd maze)
MISC = {
    "rooms": {
        "top_left": ["A6", "B5", "B6", "C5", "C7", "D7"],
        "top_right": ["E4", "E5", "E6", "F4", "F7", "G4", "G7"],
        "bottom_right": ["D2", "E1", "E3", "F2", "G1"],
        "bottom_left": ["A2", "A3", "B4", "C1", "C3", "D3"],
    }
}

EXPERIMENT_INFO = {
    "subject_IDs": SUBJECT_IDS,
    "reward_size2dur": REWARD_SIZE2DUR,
    "maze_config2info": MAZE_CONFIG2INFO,
    "maze_day2goals": MAZE_DAY2GOALS,
    "maze_measurements": MAZE_MEASUREMENTS,
    "misc": MISC,
}


# %% Functions
def get_exp_info():
    return EXPERIMENT_INFO

def save_exp_info():
    with open('/Users/cburns/Documents/Research/maze_grid_cells/functions', "w", encoding='utf-8') as outfile:
       json.dump(EXPERIMENT_INFO, outfile, indent=4)


# %%
if __name__ == "__main__":
    save_exp_info()
